name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }} - ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'zillionare/marktwain'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up node
        uses: actions/setup-node@v5
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install

      - name: Determine build command
        id: build-command
        run: |
          if [[ "${{ secrets.BUILD_COMMAND }}" == "build:h5-netlify" ]]; then
            echo "BUILD_COMMAND=build:h5-netlify" >> $GITHUB_ENV
          else
            echo "BUILD_COMMAND=build" >> $GITHUB_ENV
          fi

      - name: Run build
        run: |
          if [[ "${{ secrets.USE_CUSTOM_DOMAIN }}" == "true" ]]; then
            echo "CUSTOM_DOMAIN=true" >> $GITHUB_ENV
            pnpm web build
          else
            pnpm web ${{ env.BUILD_COMMAND }}
          fi

      - name: Create SPA support files
        run: |
          # 创建 .nojekyll 文件以禁用 Jekyll 处理
          touch apps/web/dist/.nojekyll
          
          if [[ "${{ env.CUSTOM_DOMAIN }}" == "true" ]]; then
            # 使用自定义域名时的配置
            echo "md.jieyu.ai" > apps/web/dist/CNAME
            
            # 创建 404.html 文件用于 SPA 路由重定向（自定义域名版本）
            cat > apps/web/dist/404.html << 'EOF'
            <!DOCTYPE html>
            <html>
              <head>
                <meta charset="utf-8">
                <title>Redirecting...</title>
                <script>
                  // 获取当前路径，去掉可能的查询参数和哈希
                  const path = window.location.pathname;
                  const search = window.location.search;
                  const hash = window.location.hash;
                  
                  // 重定向到 index.html，让 Vue Router 处理路由
                  window.location.replace('/index.html' + search + hash);
                </script>
              </head>
              <body>
                <p>Redirecting...</p>
              </body>
            </html>
            EOF
            
            # 创建 _redirects 文件用于 GitHub Pages SPA 支持（自定义域名版本）
            cat > apps/web/dist/_redirects << 'EOF'
            # GitHub Pages SPA redirects for custom domain
            # 将所有请求重定向到 index.html，让 Vue Router 处理路由
            /*    /index.html   200
            EOF
          else
            # 使用默认 GitHub Pages 域名时的配置
            # 创建 404.html 文件用于 SPA 路由重定向
            cat > apps/web/dist/404.html << 'EOF'
            <!DOCTYPE html>
            <html>
              <head>
                <meta charset="utf-8">
                <title>Redirecting...</title>
                <script>
                  // 获取当前路径，去掉可能的查询参数和哈希
                  const path = window.location.pathname;
                  const search = window.location.search;
                  const hash = window.location.hash;
                  
                  // 如果路径不是以 /marktwain/ 开头，重定向到 /marktwain/
                  if (!path.startsWith('/marktwain/')) {
                    window.location.replace('/marktwain/' + (search + hash));
                  } else {
                    // 如果路径以 /marktwain/ 开头，重定向到 index.html
                    window.location.replace('/marktwain/index.html' + search + hash);
                  }
                </script>
              </head>
              <body>
                <p>Redirecting...</p>
              </body>
            </html>
            EOF
            
            # 创建 _redirects 文件用于 GitHub Pages SPA 支持
            cat > apps/web/dist/_redirects << 'EOF'
            # GitHub Pages SPA redirects
            # 将所有请求重定向到 index.html，让 Vue Router 处理路由
            /*    /marktwain/index.html   200
            EOF
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: apps/web/dist

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github_pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
